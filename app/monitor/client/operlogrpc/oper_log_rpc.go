// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: desc.proto

package operlogrpc

import (
	"context"

	"monitor/pb/monitor"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	EmptyResp    = monitor.EmptyResp
	LoginInfoReq = monitor.LoginInfoReq
	OperLogReq   = monitor.OperLogReq
	Request      = monitor.Request
	Response     = monitor.Response

	OperLogRpc interface {
		Save(ctx context.Context, in *OperLogReq, opts ...grpc.CallOption) (*EmptyResp, error)
	}

	defaultOperLogRpc struct {
		cli zrpc.Client
	}
)

func NewOperLogRpc(cli zrpc.Client) OperLogRpc {
	return &defaultOperLogRpc{
		cli: cli,
	}
}

func (m *defaultOperLogRpc) Save(ctx context.Context, in *OperLogReq, opts ...grpc.CallOption) (*EmptyResp, error) {
	client := monitor.NewOperLogRpcClient(m.cli.Conn())
	return client.Save(ctx, in, opts...)
}
