// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: desc.proto

package logininforpc

import (
	"context"

	"monitor/pb/monitor"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	EmptyResp    = monitor.EmptyResp
	LoginInfoReq = monitor.LoginInfoReq
	OperLogReq   = monitor.OperLogReq
	Request      = monitor.Request
	Response     = monitor.Response

	LoginInfoRpc interface {
		Save(ctx context.Context, in *LoginInfoReq, opts ...grpc.CallOption) (*EmptyResp, error)
	}

	defaultLoginInfoRpc struct {
		cli zrpc.Client
	}
)

func NewLoginInfoRpc(cli zrpc.Client) LoginInfoRpc {
	return &defaultLoginInfoRpc{
		cli: cli,
	}
}

func (m *defaultLoginInfoRpc) Save(ctx context.Context, in *LoginInfoReq, opts ...grpc.CallOption) (*EmptyResp, error) {
	client := monitor.NewLoginInfoRpcClient(m.cli.Conn())
	return client.Save(ctx, in, opts...)
}
