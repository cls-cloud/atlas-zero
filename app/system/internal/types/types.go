// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3

package types

type Resp struct {
	Msg  string `json:"msg"`
	Code int    `json:"code"`
}

type LoginReq struct {
	Username  string `json:"username"`
	Password  string `json:"password"`
	ClientId  string `json:"clientId"`
	TenantId  string `json:"tenantId"`
	GrantType string `json:"grantType"`
	Code      string `json:"code,optional"`
	Uuid      string `json:"uuid,optional"`
}

type LoginResp struct {
	AccessToken     string `json:"access_token"`
	RefreshToken    string `json:"refresh_token"`
	ClientId        string `json:"client_id"`
	ExpireIn        int64  `json:"expire_in"`
	RefreshExpireIn int64  `json:"refresh_expire_in"`
}

type CaptchaResp struct {
	CaptchaEnabled bool   `json:"captchaEnabled"`
	Img            string `json:"img"`
	Uuid           string `json:"uuid"`
}

type TenantResp struct {
	TenantEnabled bool       `json:"tenantEnabled"`
	VoList        []TenantVo `json:"voList"`
}

type TenantVo struct {
	TenantId    string `json:"tenantId"`
	CompanyName string `json:"companyName"`
	Domain      string `json:"domain"`
}

type AddOrUpdateUserReq struct {
	RoleIds []int64 `json:"roleIds"`
	PostIds []int64 `json:"postIds"`
	UserBase
}

type UpdateUserStatusReq struct {
	UserId int64  `json:"userId"`
	Status string `json:"status"`
}

type UserDetailResp struct {
	PostIds []int64     `json:"postIds"`
	Posts   []*PostBase `json:"posts"`
	RoleIds []int64     `json:"roleIds"`
	Roles   []*RoleBase `json:"roles"`
	User    *UserRoles  `json:"user"`
}

type UserQuery struct {
	UserId      int64  `form:"userId,optional"`
	TenantId    string `form:"tenantId,optional"`
	DeptId      int64  `form:"deptId,optional"`
	UserName    string `form:"userName,optional"`
	NickName    string `form:"nickName,optional"`
	UserType    string `form:"userType,optional"`
	Email       string `form:"email,optional"`
	PhoneNumber string `form:"phonenumber,optional"`
	Sex         string `form:"sex,optional"`
	Avatar      int64  `form:"avatar,optional"`
	Status      string `form:"status,optional"`
	DelFlag     string `form:"delFlag,optional"`
	LoginIp     string `form:"loginIp,optional"`
}

type QueryPageUserListReq struct {
	PageReq
	TimeReq
	UserQuery
}

type QueryPageUserListResp struct {
	Total int64           `json:"total"`
	Rows  []QueryPageUser `json:"rows"`
}

type QueryPageUser struct {
	UserBase
	DeptName   string `json:"deptName"`
	CreateTime string `json:"createTime"`
}

type QueryUserListReq struct {
	UserQuery
}

type UserInfoResp struct {
	User        UserRoles `json:"user"`
	Roles       []string  `json:"roles"`
	Permissions []string  `json:"permissions"`
}

type UserRoles struct {
	UserBase
	Roles []RoleBase `json:"roles"`
}

type DeptTree struct {
	Disabled bool       `json:"disabled"`
	Id       int64      `json:"id"`
	Label    string     `json:"label"`
	ParentId int64      `json:"parentId"`
	Weight   int64      `json:"weight"`
	Children []DeptTree `json:"children"`
}

type PageReq struct {
	PageNum  int64 `form:"pageNum,default=1"`
	PageSize int64 `form:"pageSize,default=20"`
}

type IdReq struct {
	Id int64 `path:"id"`
}

type CodeReq struct {
	Code string `path:"code"`
}

type IdsReq struct {
	Id []int64 `json:"ids"`
}

type TimeReq struct {
	BeginTime string `form:"params[beginTime],optional"`
	EndTime   string `form:"params[endTime],optional"`
}

type UserBase struct {
	UserID      int64  `json:"userId,optional"`
	TenantId    string `json:"tenantId,optional"`
	DeptID      int64  `json:"deptId,optional"`
	UserName    string `json:"userName"`
	NickName    string `json:"nickName"`
	UserType    string `json:"userType,optional"`
	Email       string `json:"email,optional"`
	PhoneNumber string `json:"phonenumber,optional"`
	Sex         string `json:"sex,optional"`
	Avatar      int64  `json:"avatar,optional"`
	Password    string `json:"password,optional"`
	Status      string `json:"status,optional"`
	LoginIp     string `json:"loginIp,optional"`
	LoginDate   string `json:"loginDate,optional"`
	Remark      string `json:"remark,optional"`
}

type UserRoleBase struct {
	UserId int64 `json:"userId"` //用户ID
	RoleId int64 `json:"roleId"` //角色ID
}

type RoleBase struct {
	RoleId            int64  `json:"roleId"`                     //角色ID
	TenantId          string `json:"tenantId,optional"`          //租户编号
	RoleName          string `json:"roleName"`                   //角色名称
	RoleKey           string `json:"roleKey"`                    //角色权限字符串
	RoleSort          int32  `json:"roleSort"`                   //显示顺序
	DataScope         string `json:"dataScope,optional"`         //数据范围（1：全部数据权限 2：自定数据权限 3：本部门数据权限 4：本部门及以下数据权限 5：仅本人数据权限 6：部门及以下或本人数据权限）
	MenuCheckStrictly int32  `json:"menuCheckStrictly,optional"` //菜单树选择项是否关联显示
	DeptCheckStrictly int32  `json:"deptCheckStrictly,optional"` //部门树选择项是否关联显示
	Status            string `json:"status,default=2"`           //角色状态（0正常 1停用）
	Remark            string `json:"remark,optional"`            //备注
}

type UserPostBase struct {
	UserId int64 `json:"userId"` //用户ID
	PostId int64 `json:"postId"` //岗位ID
}

type PostBase struct {
	PostId       int64  `json:"postId"`                //岗位ID
	TenantId     string `json:"tenantId,optional"`     //租户编号
	DeptId       int64  `json:"deptId"`                //部门id
	PostCode     string `json:"postCode"`              //岗位编码
	PostCategory string `json:"postCategory,optional"` //岗位类别编码
	PostName     string `json:"postName"`              //岗位名称
	PostSort     int32  `json:"postSort"`              //显示顺序
	Status       string `json:"status,default=2"`      //状态（0正常 1停用）
	Remark       string `json:"remark,optional"`       //备注
}

type RoleMenuBase struct {
	RoleId int64 `json:"roleId"` //角色ID
	MenuId int64 `json:"menuId"` //菜单ID
}

type MenuBase struct {
	MenuId     int64  `json:"menuId"`              //菜单ID
	MenuName   string `json:"menuName"`            //菜单名称
	ParentId   int64  `json:"parentId,optional"`   //父菜单ID
	OrderNum   int32  `json:"orderNum,optional"`   //显示顺序
	Path       string `json:"path,optional"`       //路由地址
	Component  string `json:"component,optional"`  //组件路径
	QueryParam string `json:"queryParam,optional"` //路由参数
	IsFrame    int32  `json:"isFrame,optional"`    //是否为外链（0是 1否）
	IsCache    int32  `json:"isCache,optional"`    //是否缓存（0缓存 1不缓存）
	MenuType   string `json:"menuType,optional"`   //菜单类型（M目录 C菜单 F按钮）
	Visible    string `json:"visible,optional"`    //显示状态（0显示 1隐藏）
	Status     string `json:"status,optional"`     //菜单状态（0正常 1停用）
	Perms      string `json:"perms,optional"`      //权限标识
	Icon       string `json:"icon,optional"`       //菜单图标
	Remark     string `json:"remark,optional"`     //备注
}

type RoleDeptBase struct {
	RoleId int64 `json:"roleId"` //角色ID
	DeptId int64 `json:"deptId"` //部门ID
}

type DeptBase struct {
	DeptId       int64  `json:"deptId"`                //部门id
	TenantId     string `json:"tenantId,optional"`     //租户编号
	ParentId     int64  `json:"parentId,optional"`     //父部门id
	Ancestors    string `json:"ancestors,optional"`    //祖级列表
	DeptName     string `json:"deptName,optional"`     //部门名称
	DeptCategory string `json:"deptCategory,optional"` //部门类别编码
	OrderNum     int32  `json:"orderNum,optional"`     //显示顺序
	Leader       int64  `json:"leader,optional"`       //负责人
	Phone        string `json:"phone,optional"`        //联系电话
	Email        string `json:"email,optional"`        //邮箱
	Status       string `json:"status,optional"`       //部门状态（0正常 1停用）
}

type DictDataBase struct {
	DictCode  int64  `json:"dictCode"`           //字典编码
	TenantId  string `json:"tenantId,optional"`  //租户编号
	DictSort  int32  `json:"dictSort,optional"`  //字典排序
	DictLabel string `json:"dictLabel,optional"` //字典标签
	DictValue string `json:"dictValue,optional"` //字典键值
	DictType  string `json:"dictType,optional"`  //字典类型
	CssClass  string `json:"cssClass,optional"`  //样式属性（其他样式扩展）
	ListClass string `json:"listClass,optional"` //表格回显样式
	IsDefault string `json:"isDefault,optional"` //是否默认（Y是 N否）
	Remark    string `json:"remark,optional"`    //备注
}

type DictTypeBase struct {
	DictId   int64  `json:"dictId"`            //字典主键
	TenantId string `json:"tenantId,optional"` //租户编号
	DictName string `json:"dictName,optional"` //字典名称
	DictType string `json:"dictType,optional"` //字典类型
	Remark   string `json:"remark,optional"`   //备注
}

type ConfigBase struct {
	ConfigId    int64  `json:"configId,optional"`    // 参数主键
	TenantId    string `json:"tenantId,optional"`    // 租户编号
	ConfigName  string `json:"configName,optional"`  // 参数名称
	ConfigKey   string `json:"configKey,optional"`   // 参数键名
	ConfigValue string `json:"configValue,optional"` // 参数键值
	ConfigType  string `json:"configType,optional"`  // 系统内置（Y是 N否）
	Remark      string `json:"remark,optional"`      // 备注
}

type LogininforBase struct {
	InfoId        int64  `json:"infoId"`                 //访问ID
	TenantId      string `json:"tenantId,optional"`      //租户编号
	UserName      string `json:"userName,optional"`      //用户账号
	ClientKey     string `json:"clientKey,optional"`     //客户端
	DeviceType    string `json:"deviceType,optional"`    //设备类型
	Ipaddr        string `json:"ipaddr,optional"`        //登录IP地址
	LoginLocation string `json:"loginLocation,optional"` //登录地点
	Browser       string `json:"browser,optional"`       //浏览器类型
	Os            string `json:"os,optional"`            //操作系统
	Status        string `json:"status,optional"`        //登录状态（0成功 1失败）
	Msg           string `json:"msg,optional"`           //提示消息
	LoginTime     string `json:"loginTime,optional"`     //访问时间
}

type NoticeBase struct {
	NoticeId      int64  `json:"noticeId"`               //公告ID
	TenantId      string `json:"tenantId,optional"`      //租户编号
	NoticeTitle   string `json:"noticeTitle"`            //公告标题
	NoticeType    string `json:"noticeType"`             //公告类型（1通知 2公告）
	NoticeContent string `json:"noticeContent,optional"` //公告内容
	Status        string `json:"status,optional"`        //公告状态（0正常 1关闭）
	Remark        string `json:"remark,optional"`        //备注
}

type OperLogBase struct {
	OperId        int64  `json:"operId"`                 //日志主键
	TenantId      string `json:"tenantId,optional"`      //租户编号
	Title         string `json:"title,optional"`         //模块标题
	BusinessType  int32  `json:"businessType,optional"`  //业务类型（0其它 1新增 2修改 3删除）
	Method        string `json:"method,optional"`        //方法名称
	RequestMethod string `json:"requestMethod,optional"` //请求方式
	OperatorType  int32  `json:"operatorType,optional"`  //操作类别（0其它 1后台用户 2手机端用户）
	OperName      string `json:"operName,optional"`      //操作人员
	DeptName      string `json:"deptName,optional"`      //部门名称
	OperUrl       string `json:"operUrl,optional"`       //请求URL
	OperIp        string `json:"operIp,optional"`        //主机地址
	OperLocation  string `json:"operLocation,optional"`  //操作地点
	OperParam     string `json:"operParam,optional"`     //请求参数
	JsonResult    string `json:"jsonResult,optional"`    //返回参数
	Status        int32  `json:"status,optional"`        //操作状态（0正常 1异常）
	ErrorMsg      string `json:"errorMsg,optional"`      //错误消息
	OperTime      string `json:"operTime,optional"`      //操作时间
	CostTime      int64  `json:"costTime,optional"`      //消耗时间
}

type OssBase struct {
	OssId        int64  `json:"ossId"`             //对象存储主键
	TenantId     string `json:"tenantId,optional"` //租户编号
	FileName     string `json:"fileName"`          //文件名
	OriginalName string `json:"originalName"`      //原名
	FileSuffix   string `json:"fileSuffix"`        //文件后缀名
	Url          string `json:"url"`               //URL地址
	Ext1         string `json:"ext1,optional"`     //扩展字段
	Service      string `json:"service"`           //服务商
}

type OssConfigBase struct {
	OssConfigId  int64  `json:"ossConfigId"`         //主键
	TenantId     string `json:"tenantId,optional"`   //租户编号
	ConfigKey    string `json:"configKey"`           //配置key
	AccessKey    string `json:"accessKey,optional"`  //accessKey
	SecretKey    string `json:"secretKey,optional"`  //秘钥
	BucketName   string `json:"bucketName,optional"` //桶名称
	Prefix       string `json:"prefix,optional"`     //前缀
	Endpoint     string `json:"endpoint,optional"`   //访问站点
	Domain       string `json:"domain,optional"`     //自定义域名
	IsHttps      string `json:"isHttps,optional"`    //是否https（Y=是,N=否）
	Region       string `json:"region,optional"`     //域
	AccessPolicy string `json:"accessPolicy"`        //桶权限类型(0=private 1=public 2=custom)
	Status       string `json:"status,optional"`     //是否默认（0=是,1=否）
	Ext1         string `json:"ext1,optional"`       //扩展字段
	Remark       string `json:"remark,optional"`     //备注
}

type TenantBase struct {
	Id              int64  `json:"id"`                       //id
	TenantId        string `json:"tenantId"`                 //租户编号
	ContactUserName string `json:"contactUserName,optional"` //联系人
	ContactPhone    string `json:"contactPhone,optional"`    //联系电话
	CompanyName     string `json:"companyName,optional"`     //企业名称
	LicenseNumber   string `json:"licenseNumber,optional"`   //统一社会信用代码
	Address         string `json:"address,optional"`         //地址
	Intro           string `json:"intro,optional"`           //企业简介
	Domain          string `json:"domain,optional"`          //域名
	Remark          string `json:"remark,optional"`          //备注
	PackageId       int64  `json:"packageId,optional"`       //租户套餐编号
	ExpireTime      string `json:"expireTime,optional"`      //过期时间
	AccountCount    int32  `json:"accountCount,optional"`    //用户数量（-1不限制）
	Status          string `json:"status,optional"`          //租户状态（0正常 1停用）
}

type TenantPackagBase struct {
	PackageId         int64  `json:"packageId"`                  //租户套餐id
	PackageName       string `json:"packageName,optional"`       //套餐名称
	MenuIds           string `json:"menuIds,optional"`           //关联菜单id
	Remark            string `json:"remark,optional"`            //备注
	MenuCheckStrictly int32  `json:"menuCheckStrictly,optional"` //菜单树选择项是否关联显示
	Status            string `json:"status,optional"`            //状态（0正常 1停用）
}

type ClientBase struct {
	Id            int64  `json:"id"`                     //id
	ClientId      string `json:"clientId,optional"`      //客户端id
	ClientKey     string `json:"clientKey,optional"`     //客户端key
	ClientSecret  string `json:"clientSecret,optional"`  //客户端秘钥
	GrantType     string `json:"grantType,optional"`     //授权类型
	DeviceType    string `json:"deviceType,optional"`    //设备类型
	ActiveTimeout int32  `json:"activeTimeout,optional"` //token活跃超时时间
	Timeout       int32  `json:"timeout,optional"`       //token固定超时
	Status        string `json:"status,optional"`        //状态（0正常 1停用）
}

type SocialBase struct {
	Id               int64  `json:"id"`                        //主键
	UserId           int64  `json:"userId"`                    //用户ID
	TenantId         string `json:"tenantId,optional"`         //租户id
	AuthId           string `json:"authId"`                    //平台+平台唯一id
	Source           string `json:"source"`                    //用户来源
	OpenId           string `json:"openId,optional"`           //平台编号唯一id
	UserName         string `json:"userName"`                  //登录账号
	NickName         string `json:"nickName,optional"`         //用户昵称
	Email            string `json:"email,optional"`            //用户邮箱
	Avatar           string `json:"avatar,optional"`           //头像地址
	AccessToken      string `json:"accessToken"`               //用户的授权令牌
	ExpireIn         int32  `json:"expireIn,optional"`         //用户的授权令牌的有效期，部分平台可能没有
	RefreshToken     string `json:"refreshToken,optional"`     //刷新令牌，部分平台可能没有
	AccessCode       string `json:"accessCode,optional"`       //平台的授权信息，部分平台可能没有
	UnionId          string `json:"unionId,optional"`          //用户的 unionid
	Scope            string `json:"scope,optional"`            //授予的权限，部分平台可能没有
	TokenType        string `json:"tokenType,optional"`        //个别平台的授权信息，部分平台可能没有
	IdToken          string `json:"idToken,optional"`          //id token，部分平台可能没有
	MacAlgorithm     string `json:"macAlgorithm,optional"`     //小米平台用户的附带属性，部分平台可能没有
	MacKey           string `json:"macKey,optional"`           //小米平台用户的附带属性，部分平台可能没有
	Code             string `json:"code,optional"`             //用户的授权code，部分平台可能没有
	OauthToken       string `json:"oauthToken,optional"`       //Twitter平台用户的附带属性，部分平台可能没有
	OauthTokenSecret string `json:"oauthTokenSecret,optional"` //Twitter平台用户的附带属性，部分平台可能没有
}

type AddOrUpdateRoleReq struct {
	RoleBase
}

type UpdateRoleStatusReq struct {
	RoleId int64  `json:"roleId"`
	Status string `json:"status,default=2"` //角色状态（0正常 1停用）
}

type RoleDetailResp struct {
	RoleBase
	CreateDept int64  `json:"createDept"` //创建部门
	CreateBy   int64  `json:"createBy"`   //创建者
	CreateTime string `json:"createTime"` //创建时间
	UpdateBy   int64  `json:"updateBy"`   //更新者
	UpdateTime string `json:"updateTime"` //更新时间
	Remark     string `json:"remark"`     //备注
}

type RoleQuery struct {
	RoleId            int64  `json:"roleId"`                     //角色ID
	TenantId          string `json:"tenantId,optional"`          //租户编号
	RoleName          string `json:"roleName"`                   //角色名称
	RoleKey           string `json:"roleKey"`                    //角色权限字符串
	RoleSort          int32  `json:"roleSort"`                   //显示顺序
	DataScope         string `json:"dataScope,optional"`         //数据范围（1：全部数据权限 2：自定数据权限 3：本部门数据权限 4：本部门及以下数据权限 5：仅本人数据权限 6：部门及以下或本人数据权限）
	MenuCheckStrictly int32  `json:"menuCheckStrictly,optional"` //菜单树选择项是否关联显示
	DeptCheckStrictly int32  `json:"deptCheckStrictly,optional"` //部门树选择项是否关联显示
	Status            string `json:"status,default=2"`           //角色状态（0正常 1停用）
}

type QueryPageRoleListReq struct {
	PageReq
	RoleBase
}

type QueryPageRoleListResp struct {
	Total int64            `json:"total"`
	Rows  []RoleDetailResp `json:"rows"`
}

type QueryRoleListReq struct {
	RoleQuery
}

type ModifyMenuReq struct {
	MenuBase
}

type MenuQuery struct {
	MenuId     int64  `json:"menuId,optional"`
	MenuName   string `json:"menuName,optional"`
	ParentId   int64  `json:"parentId,optional"`
	OrderNum   int32  `json:"orderNum,optional"`
	Path       string `json:"path,optional"`
	Component  string `json:"component,optional"`
	QueryParam string `json:"queryParam,optional"`
	IsFrame    int32  `json:"isFrame,optional"`
	IsCache    int32  `json:"isCache,optional"`
	MenuType   string `json:"menuType,optional"`
	Visible    string `json:"visible,optional"`
	Status     string `json:"status,optional"`
	Perms      string `json:"perms,optional"`
}

type QueryPageMenuListReq struct {
	PageReq
	MenuQuery
}

type QueryPageMenuListResp struct {
	Total int64            `json:"total"`
	Rows  []MenuDetailResp `json:"rows"`
}

type QueryMenuListReq struct {
	MenuQuery
}

type MenuDetailResp struct {
	MenuBase
	CreateDept int64  `json:"createDept"`
	CreateBy   int64  `json:"createBy"`
	CreateTime string `json:"createTime"`
	UpdateBy   int64  `json:"updateBy"`
	UpdateTime string `json:"updateTime"`
}

type MenuInfoResp struct {
	MenuBase
}

type RouterMenuResp struct {
	MenuId     int64             `json:"menuId"`
	Name       string            `json:"name"`
	Path       string            `json:"path"`
	Hidden     bool              `json:"hidden"`
	Redirect   string            `json:"redirect,optional"` // 可选
	Component  string            `json:"component"`
	AlwaysShow bool              `json:"alwaysShow,optional"` // 可选
	Meta       *RouterMenuMeta   `json:"meta"`
	ParentId   int64             `json:"parentId"`
	Children   []*RouterMenuResp `json:"children,omitempty"`
}

type RouterMenuMeta struct {
	Title   string `json:"title"`
	Icon    string `json:"icon"`
	NoCache bool   `json:"noCache"`
	Link    string `json:"link,optional"`
}

type ModifyPostReq struct {
	PostBase
}

type PostQuery struct {
	PostId       int64  `json:"postId,optional"`
	TenantId     string `json:"tenantId,optional"`
	DeptId       int64  `form:"deptId,optional"`
	PostCode     string `json:"postCode,optional"`
	PostCategory string `json:"postCategory,optional"`
	PostName     string `json:"postName,optional"`
	PostSort     int32  `json:"postSort,optional"`
	Status       string `json:"status,optional"`
	CreateDept   int64  `json:"createDept,optional"`
	CreateBy     int64  `json:"createBy,optional"`
	CreateTime   string `json:"createTime,optional"`
	UpdateBy     int64  `json:"updateBy,optional"`
	UpdateTime   string `json:"updateTime,optional"`
	Remark       string `json:"remark,optional"`
}

type QueryPagePostListReq struct {
	PageReq
	PostQuery
}

type QueryPagePostListResp struct {
	Total int64            `json:"total"`
	Rows  []PostDetailResp `json:"rows"`
}

type QueryPostListReq struct {
	PostQuery
}

type PostDetailResp struct {
	PostBase
}

type PostInfoResp struct {
	PostBase
}

type ModifyConfigReq struct {
	ConfigBase
}

type ConfigQuery struct {
	ConfigId    int64  `json:"configId,optional"`
	TenantId    string `json:"tenantId,optional"`
	ConfigName  string `json:"configName,optional"`
	ConfigKey   string `json:"configKey,optional"`
	ConfigValue string `json:"configValue,optional"`
	ConfigType  string `json:"configType,optional"`
	CreateDept  int64  `json:"createDept,optional"`
	CreateBy    int64  `json:"createBy,optional"`
	CreateTime  string `json:"createTime,optional"`
	UpdateBy    int64  `json:"updateBy,optional"`
	UpdateTime  string `json:"updateTime,optional"`
	Remark      string `json:"remark,optional"`
}

type QueryPageConfigListReq struct {
	PageReq
	ConfigQuery
}

type QueryPageConfigListResp struct {
	Total int64              `json:"total"`
	Rows  []ConfigDetailResp `json:"rows"`
}

type QueryConfigListReq struct {
	ConfigQuery
}

type ConfigDetailResp struct {
	ConfigBase
}

type ConfigInfoResp struct {
	ConfigBase
}

type ConfigKeyResp struct {
	Data string `json:"data"`
}

type ModifyDictDataReq struct {
	DictDataBase
}

type DictDataQuery struct {
	DictCode   int64  `json:"dictCode,optional"`
	TenantId   string `json:"tenantId,optional"`
	DictSort   int32  `json:"dictSort,optional"`
	DictLabel  string `json:"dictLabel,optional"`
	DictValue  string `json:"dictValue,optional"`
	DictType   string `json:"dictType,optional"`
	CssClass   string `json:"cssClass,optional"`
	ListClass  string `json:"listClass,optional"`
	IsDefault  string `json:"isDefault,optional"`
	CreateDept int64  `json:"createDept,optional"`
	CreateBy   int64  `json:"createBy,optional"`
	CreateTime string `json:"createTime,optional"`
	UpdateBy   int64  `json:"updateBy,optional"`
	UpdateTime string `json:"updateTime,optional"`
	Remark     string `json:"remark,optional"`
}

type QueryPageDictDataListReq struct {
	PageReq
	DictDataQuery
}

type QueryPageDictDataListResp struct {
	Total int64                `json:"total"`
	Rows  []DictDataDetailResp `json:"rows"`
}

type QueryDictDataListReq struct {
	DictDataQuery
}

type DictDataDetailResp struct {
	DictDataBase
}

type DictDataInfoResp struct {
	DictDataBase
}

type ModifyDictTypeReq struct {
	DictTypeBase
}

type DictTypeQuery struct {
	DictId     int64  `json:"dictId,optional"`
	TenantId   string `json:"tenantId,optional"`
	DictName   string `json:"dictName,optional"`
	DictType   string `json:"dictType,optional"`
	CreateDept int64  `json:"createDept,optional"`
	CreateBy   int64  `json:"createBy,optional"`
	CreateTime string `json:"createTime,optional"`
	UpdateBy   int64  `json:"updateBy,optional"`
	UpdateTime string `json:"updateTime,optional"`
	Remark     string `json:"remark,optional"`
}

type QueryPageDictTypeListReq struct {
	PageReq
	DictTypeQuery
}

type QueryPageDictTypeListResp struct {
	Total int64                `json:"total"`
	Rows  []DictTypeDetailResp `json:"rows"`
}

type QueryDictTypeListReq struct {
	DictTypeQuery
}

type DictTypeDetailResp struct {
	DictTypeBase
}

type DictTypeInfoResp struct {
	DictTypeBase
}
