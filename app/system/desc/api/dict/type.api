syntax = "v1"

info(
    desc: "字典类型"
    author: "atlas"
    email: "ut1221@icloud.com"
    date: "2025-07-08 23:01:18"
)

import "../base.api"

type (

    // 创建和更新共用结构
    ModifyDictTypeReq {
        DictTypeBase
    }

        // 请求过滤参数
    DictTypeQuery {
        // 字典主键
        dictId int64 `json:"dictId,optional"`
        // 租户编号
        tenantId string `json:"tenantId,optional"`
        // 字典名称
        dictName string `json:"dictName,optional"`
        // 字典类型
        dictType string `json:"dictType,optional"`
        // 创建部门
        createDept int64 `json:"createDept,optional"`
        // 创建者
        createBy int64 `json:"createBy,optional"`
        // 创建时间
        createTime string `json:"createTime,optional"`
        // 更新者
        updateBy int64 `json:"updateBy,optional"`
        // 更新时间
        updateTime string `json:"updateTime,optional"`
        // 备注
        remark string `json:"remark,optional"`
    }
        // 分页请求过滤参数
    QueryPageDictTypeListReq {
        PageReq
        DictTypeQuery
    }
        // 分页响应
    QueryPageDictTypeListResp {
        Total int64 `json:"total"`
        Rows []DictTypeDetailResp `json:"rows"`
    }

    QueryDictTypeListReq {
        DictTypeQuery
    }

    DictTypeDetailResp {
        DictTypeBase
    }

    DictTypeInfoResp {
        DictTypeBase
    }
)

@server(
    tags: "字典类型"
    group: dict/_type
    prefix: /system/dict/type
    middleware: Auth
)
service System {
    @handler GetDictTypeInfo
    get /info returns (DictTypeInfoResp)

    @handler AddDictType
    post /add (ModifyDictTypeReq)

    @handler DeleteDictType
    get /delete (IdsReq)

    @handler UpdateDictType
    post /update (ModifyDictTypeReq)

    @handler QueryPageDictTypeList
    get /queryPageList (QueryPageDictTypeListReq) returns (QueryPageDictTypeListResp)

    @handler QueryDictTypeList
    get /queryList (QueryDictTypeListReq) returns ([]DictTypeDetailResp)
}
