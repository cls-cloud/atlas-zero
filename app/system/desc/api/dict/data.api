syntax = "v1"

info(
    desc: "字典数据"
    author: "atlas"
    email: "ut1221@icloud.com"
    date: "2025-07-08 22:55:53"
)

import "../base.api"

type (
    // 创建和更新共用结构
    ModifyDictDataReq {
        DictDataBase
    }
        // 请求过滤参数
    DictDataQuery {
        DictCode int64 `form:"dictCode,optional"`      // 字典编码
        TenantId string `form:"tenantId,optional"`     // 租户编号
        DictSort int32 `form:"dictSort,optional"`      // 字典排序
        DictLabel string `form:"dictLabel,optional"`   // 字典标签
        DictValue string `form:"dictValue,optional"`   // 字典键值
        DictType string `form:"dictType,optional"`     // 字典类型
        CssClass string `form:"cssClass,optional"`     // 样式属性（其他样式扩展）
        ListClass string `form:"listClass,optional"`   // 表格回显样式
        IsDefault string `form:"isDefault,optional"`   // 是否默认（Y是 N否）
        CreateDept int64 `form:"createDept,optional"`  // 创建部门
        CreateBy int64 `form:"createBy,optional"`      // 创建者
        CreateTime string `form:"createTime,optional"` // 创建时间
        UpdateBy int64 `form:"updateBy,optional"`      // 更新者
        UpdateTime string `form:"updateTime,optional"` // 更新时间
        Remark string `form:"remark,optional"`         // 备注
    }

        // 分页请求过滤参数
    PageSetDictDataReq {
        PageReq
        DictDataQuery
    }
        // 分页响应
    PageSetDictDataResp {
        Total int64 `json:"total"`
        Rows []*DictDataBase `json:"rows"`
    }
)

@server(
    tags: "字典数据"
    group: dict/data
    prefix: /system/dict/data
    middleware: Auth
)
service System {
    @handler DataByType
    get /type/:code (CodeReq) returns ([]*DictDataBase)

    @handler Info
    get /:id (IdReq) returns (DictDataBase)

    @handler Add
    post / (ModifyDictDataReq)

    @handler DeleteDictData
    delete /:code (CodeReq)

    @handler Update
    put / (ModifyDictDataReq)

    @handler PageSet
    get /list (PageSetDictDataReq) returns (PageSetDictDataResp)
}
