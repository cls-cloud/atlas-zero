info(
    desc: "参数配置"
    author: "atlas"
    email: "ut1221@icloud.com"
    data: "2025-07-08 23:04:47"
)

import "base.api"

type (

    // 创建和更新共用结构
    ModifyConfigReq {
        ConfigBase
    }

        // 请求过滤参数
    ConfigQuery {
        // 参数主键
        configId int64 `json:"configId,optional"`
        // 租户编号
        tenantId string `json:"tenantId,optional"`
        // 参数名称
        configName string `json:"configName,optional"`
        // 参数键名
        configKey string `json:"configKey,optional"`
        // 参数键值
        configValue string `json:"configValue,optional"`
        // 系统内置（Y是 N否）
        configType string `json:"configType,optional"`
        // 创建部门
        createDept int64 `json:"createDept,optional"`
        // 创建者
        createBy int64 `json:"createBy,optional"`
        // 创建时间
        createTime string `json:"createTime,optional"`
        // 更新者
        updateBy int64 `json:"updateBy,optional"`
        // 更新时间
        updateTime string `json:"updateTime,optional"`
        // 备注
        remark string `json:"remark,optional"`
    }
        // 分页请求过滤参数
    QueryPageConfigListReq {
        PageReq
        ConfigQuery
    }
        // 分页响应
    QueryPageConfigListResp {
        Total int64 `json:"total"`
        Rows []ConfigDetailResp `json:"rows"`
    }

    QueryConfigListReq {
        ConfigQuery
    }

    ConfigDetailResp {
        ConfigBase
    }

    ConfigInfoResp {
        ConfigBase
    }

    ConfigKeyResp {
        Data string `json:"data"`
    }
)

@server(
    tags: "参数配置"
    group: _config
    prefix: /system/config
    middleware: Auth
)
service System {
    @handler ConfigKey
    get /configKey/:code (CodeReq) returns (ConfigKeyResp)

    @handler GetConfigInfo
    get /info returns (ConfigInfoResp)

    @handler AddConfig
    post /add (ModifyConfigReq)

    @handler DeleteConfig
    get /delete (IdsReq)

    @handler UpdateConfig
    post /update (ModifyConfigReq)

    @handler QueryPageConfigList
    get /queryPageList (QueryPageConfigListReq) returns (QueryPageConfigListResp)

    @handler QueryConfigList
    get /queryList (QueryConfigListReq) returns ([]ConfigDetailResp)
}
