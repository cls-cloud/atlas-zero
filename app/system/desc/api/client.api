info(
    desc: "系统授权"
    author: "atlas"
    email: "ut1221@icloud.com"
    date: "2025-07-11 22:15:03"
)

import "base.api"

type (
        // 创建和更新共用结构
    ModifyClientReq {
        ClientBase
    }

        // 请求过滤参数
    ClientQuery {
        Id string `form:"id,optional"`                      // id
        ClientId string `form:"clientId,optional"`          // 客户端id
        ClientKey string `form:"clientKey,optional"`        // 客户端key
        ClientSecret string `form:"clientSecret,optional"`  // 客户端秘钥
        GrantType string `form:"grantType,optional"`        // 授权类型
        DeviceType string `form:"deviceType,optional"`      // 设备类型
        ActiveTimeout int32 `form:"activeTimeout,optional"` // token活跃超时时间
        Timeout int32 `form:"timeout,optional"`             // token固定超时
        Status string `form:"status,optional"`              // 状态（0正常 1停用）
        DelFlag string `form:"delFlag,optional"`            // 删除标志（0代表存在 1代表删除）
        CreateDept int64 `form:"createDept,optional"`       // 创建部门
        CreateBy int64 `form:"createBy,optional"`           // 创建者
        CreateTime string `form:"createTime,optional"`      // 创建时间
        UpdateBy int64 `form:"updateBy,optional"`           // 更新者
        UpdateTime string `form:"updateTime,optional"`      // 更新时间
    }

        // 分页请求过滤参数
    PageSetClientReq {
        PageReq
        ClientQuery
    }

    PageSetClientResp {
        Rows []*ClientBase `json:"rows"`
        Total int64 `json:"total"`
    }

    ChangeStatusClientReq {
        ClientID string `json:"clientId"`
        Status string `json:"status"`
    }
)

@server(
    tags: "系统授权"
    group: client
    prefix: /system/client
    middleware: Auth
)
service System {
    @handler Info
    get /:id (IdReq) returns (ClientBase)

    @handler Add
    post / (ModifyClientReq)

    @handler Delete
    delete /:ids (IdsReq)

    @handler ChangeStatus
    put /changeStatus (ClientQuery) returns ([]*ClientBase)

    @handler Update
    put / (ModifyClientReq)

    @handler PageSet
    get /list (ChangeStatusClientReq)
}
